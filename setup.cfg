[metadata]
name = rlstack
author = Andrew B.
url = https://github.com/theOGognf/rlstack
project_urls =
    Source = https://github.com/theOGognf/rlstack
    Tracker = https://github.com/theOGognf/rlstack/issues

[options]
package_dir =
    =src
packages = find:
install_requires =
    pandas
    tensordict
    torch
    typing-extensions
classifiers =
    Development Status :: 3 - Alpha
    Environment :: GPU
    Intended Audience :: Science/Research
    Intended Audience :: Developers
    License :: OSI Approved :: Apache Software License
    Operating System :: POSIX
    Operating System :: Unix
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    Topic :: Software Development
    Topic :: Scientific/Engineering
    Topic :: Scientific/Engineering :: Artificial Intelligence
    Typing :: Typed

[options.extras_require]
dev =
    mypy
    pre-commit
    pytest
    pytest-cov
    pytest-shutil
    pytest-virtualenv
    pytest-fixture-config
    pytest-xdist
    pytest-randomly
    sphinx
    tox
    virtualenv

[options.packages.find]
where = src

[isort]
profile = black
src_paths =
    setup.py
    src
    tests

[mypy]
strict = True
ignore_missing_imports = True
implicit_reexport = True
no_implicit_optional = True
show_error_codes = True
exclude =
    (?x)(
        src/rlstack/optim/dadaptation
        | src/rlstack/specs.py
    )

[tox:tox]
envlist = py310
isolated_build = True

[testenv]
description = Invoke pytest to run automated tests
changedir = {toxinidir}
usedevelop = True
setenv =
    TOXINIDIR = {toxinidir}
passenv =
    PIP_CACHE
    PIP_TRUSTED_HOST
    SETUPTOOLS_*
extras =
    dev
    learning
commands =
    pytest {posargs}

[testenv:lint]
skip_install = True
passenv =
    TERM
commands =
    pre-commit run --all-files

[testenv:typecheck]
changedir = {toxinidir}
passenv =
    TERM
    # ^ ensure colors
commands =
    mypy src

[testenv:{build,clean}]
description =
    build: Build the package in isolation according to PEP517, see https://github.com/pypa/build
    clean: Remove old distribution files and temporary build artifacts (./build and ./dist)
# https://setuptools.pypa.io/en/latest/build_meta.html#how-to-use-it
skip_install = True
changedir = {toxinidir}
passenv =
    SETUPTOOLS_*
commands =
    clean: python -c 'import shutil; [shutil.rmtree(p, True) for p in ("build", "dist", "docs/_build")]'
    clean: python -c 'import pathlib, shutil; [shutil.rmtree(p, True) for p in pathlib.Path("src").glob("*.egg-info")]'
    build: python -m build {posargs}

[testenv:publish]
description =
    Publish the package you have been developing to a package index server.
    By default, it uses testpypi. If you really want to publish your package
    to be publicly accessible in PyPI, use the `-- --repository pypi` option.
skip_install = True
changedir = {toxinidir}
passenv =
    TWINE_USERNAME
    TWINE_PASSWORD
    TWINE_REPOSITORY
deps = twine
commands =
    python -m twine check dist/*
    python -m twine upload {posargs:--repository {env:TWINE_REPOSITORY:testpypi}} dist/*
